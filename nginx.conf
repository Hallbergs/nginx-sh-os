user nginx;
worker_processes auto;
error_log stderr warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name $host to: $upstream_addr: $request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    access_log /dev/stdout main;
    access_log /dev/stdout upstreamlog;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    server_tokens off;  # Hide NGINX version number

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

    server {
        listen       8080;
        server_name  localhost;

        # Root directory for serving files
        root   /usr/share/nginx/html;
        index  index.html;

        location ~* \.(json|jpg|jpeg|png|gif|md)$ {
            proxy_ssl_server_name on;
            proxy_ssl_session_reuse on;
            proxy_ssl_verify off;

            if ($request_uri ~* /([^/]+)\.(json|jpg|jpeg|png|gif|md)$) {
                set $file_name $1;
                set $file_extension $2;
            }
            rewrite ^/([^/]+)\.(json|jpg|jpeg|png|gif)$ /jonastest/public/$file_name.$file_extension last;

            proxy_pass https://s3.goteborg.se;
            proxy_set_header Host s3.goteborg.se;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Accept '*/*';
            proxy_set_header       Authorization '';
            proxy_hide_header      x-amz-id-2;
            proxy_hide_header      x-amz-request-id;
            proxy_ignore_headers   "Set-Cookie";
            proxy_buffering        off;
            proxy_intercept_errors on;
            proxy_http_version     1.1;
        }

        location / {
            try_files $uri $uri/ /index.html;
            limit_req zone=one burst=20 nodelay;
        }

        # Block access to .env files
        location ~ /\.env {
            deny all;
            access_log off;
            log_not_found off;
        }


    }
}